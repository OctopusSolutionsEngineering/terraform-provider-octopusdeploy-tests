name: Go Build
'on':
  workflow_dispatch: {}
  push: {}
  schedule:
    - cron: '0 10 * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.20
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: 5.x
      - id: determine_version
        name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          additionalArguments: /overrideconfig mode=Mainline
      - name: Install Octopus Deploy CLI
        uses: OctopusDeploy/install-octopus-cli-action@v1
        with:
          version: latest
      - name: Install Dependencies
        run: go get ./...
        shell: bash
      - name: List Dependencies
        run: go list -u -m all > dependencies.txt
        shell: bash
      - name: Collect Dependencies
        uses: actions/upload-artifact@v2
        with:
          name: Dependencies
          path: dependencies.txt
      - name: List Dependency Updates
        run: go list -u -m -f "{{if .Update}}{{.}}{{end}}" all > dependencyUpdates.txt
        shell: bash
      - name: Collect Dependency Updates
        uses: actions/upload-artifact@v2
        with:
          name: Dependencies Updates
          path: dependencyUpdates.txt
      - name: Clone the Terraform provider source
        run: git clone https://github.com/OctopusDeployLabs/terraform-provider-octopusdeploy.git
        shell: bash
      - name: Checkout the same branch as this test
        run: git switch ${GITHUB_REF##refs/heads/}
        shell: bash
        working-directory: terraform-provider-octopusdeploy
      - name: Build the Terraform provider from source
        run: go build -o terraform-provider-octopusdeploy
        working-directory: terraform-provider-octopusdeploy
      - name: Override the location used by Terraform provider
        run: |-
          cat <<EOT >> ~/.terraformrc
          provider_installation {
              dev_overrides {
              "octopusdeploylabs/octopusdeploy" = "${{ github.workspace }}/terraform-provider-octopusdeploy"
            }
            direct {}
          }
          EOT
      - name: Test
        run: go install gotest.tools/gotestsum@latest; gotestsum --junitfile results.xml -- -v -timeout 0 -json ./...
        shell: bash
        env:
          LICENSE: ${{ secrets.LICENSE }}
          ECR_ACCESS_KEY: ${{ secrets.ECR_ACCESS_KEY }}
          ECR_SECRET_KEY: ${{ secrets.ECR_SECRET_KEY }}
          GIT_CREDENTIAL: ${{ secrets.GIT_CREDENTIAL }}
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          OCTOTESTSKIPINIT: true
      - if: always()
        name: Report
        uses: dorny/test-reporter@v1
        with:
          name: Go Tests
          path: results.xml
          reporter: java-junit
          fail-on-error: 'false'
permissions:
  id-token: write
  checks: write
  contents: write
